public String productReport() throws Exception {
	logger.info( "Starting productReport()" ); //f:log

	ActionContext ac = ActionContext.getContext();
	ServletContext sc = (ServletContext) ac.get( StrutsStatics.SERVLET_CONTEXT );

	JasperReport jasperReport = JasperCompileManager.compileReport( sc.getResourceAsStream( "/WEB-INF/classes/ProductReport.xml" ) ); //f:jr

	Map<String, Object> parameters = new HashMap<String, Object>(); //f:jr
	parameters.put( "ReportTitle", "List of Products" ); //f:jr
	parameters.put( "DataFile", new Date().toString() ); //f:jr

	Session sess = HibernateUtil.getSessionFactory().openSession(); //f:hibernate
	Transaction t = sess.beginTransaction(); //f:hibernate

	Criteria criteria = sess.createCriteria( Product.class ); //f:hibernate

	criteria.setProjection( Projections.projectionList().add( Projections.property( "id" ) ).add( Projections.property( "name" ) ).add( Projections.property( "price" ) ) ); //f:hibernate

	
	@SuppressWarnings("unchecked")
	List<Object[]> l = (List<Object[]>) criteria.list(); //f:hibernate

	t.commit(); //f:hibernate
	sess.close(); //f:hibernate

	HibernateQueryResultDataSource ds = new HibernateQueryResultDataSource(l, new String[] { "Id", "Name", "Price" }); //f:jr

	JasperPrint jasperPrint = JasperFillManager.fillReport( jasperReport, parameters, ds ); //f:jr

	byte b[] = JasperExportManager.exportReportToPdf( jasperPrint ); //f:jr

	this.inputStream = new ByteArrayInputStream( b );

	logger.info( "Finishing productReport()" ); //f:log
	return "download";
}